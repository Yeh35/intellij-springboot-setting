//buildscript {
//    ext {
//        springBootVersion = '2.2.6.RELEASE'
//        querydslPluginVersion = '1.0.10'
//    }
//
//    repositories {
//        mavenCentral()
//        maven { url "https://plugins.gradle.org/m2/" }
//        jcenter()
//    }
//
//    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}") // querydsl 플러그인 의존성 등록
//    }
//}

plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE' //apply false
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'eclipse'
    id 'java'
}

//apply plugin: 'java'
//
//apply plugin: 'org.springframework.boot'
//apply plugin: 'io.spring.dependency-management'
//apply plugin: "com.ewerk.gradle.plugins.querydsl"

group 'me.sangoh.default'
//version '1.0.1-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")
version '1.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    compile("com.querydsl:querydsl-jpa") // querydsl
    compile("com.querydsl:querydsl-apt") // querydsl

    compile('com.h2database:h2')

    compile('io.springfox:springfox-swagger2:2.9.2')
    compile('io.springfox:springfox-swagger-ui:2.9.2')

    compile('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
}

// querydsl 적용
def querydslSrcDir = 'src/main/generated' // QClass 생성 위치

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}

//configurations {
//    querydsl.extendsFrom compileClasspath
//}

configurations {
    querydsl.extendsFrom compileClasspath
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}